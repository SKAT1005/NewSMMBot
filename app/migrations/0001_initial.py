# Generated by Django 5.2 on 2025-05-11 23:14

import datetime
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.CharField(max_length=128, verbose_name='Ссылка на бота/канал')),
                ('is_channel', models.BooleanField(default=True, verbose_name='Канал ли для прохождения')),
                ('is_smile', models.BooleanField(default=False, verbose_name='Тест смайликом')),
                ('text', models.CharField(max_length=128, verbose_name='Текст для прохождения теста')),
                ('percent', models.IntegerField(default=100, verbose_name='Процент прохождения')),
                ('delay', models.IntegerField(default=5, verbose_name='Задержка для прохождения')),
            ],
        ),
        migrations.CreateModel(
            name='AdParam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ad_detect', models.TextField(default='', verbose_name='Ссылки, которые не будут определяться, как рекламные')),
                ('subscribe_percent', models.IntegerField(default=10, verbose_name='% аккаунтов, которые подпишутся на рекламу')),
                ('start_ladder', models.CharField(default='5/10; 4/35; 3/45; 6/150;13/280; 11/390; 28/1440; 22/2880; 8/4740', max_length=512, verbose_name='% от подписавшихся на рекламу, которые будут читать контент')),
                ('unsubscribes', models.CharField(default='40/1440; 60/44640', max_length=512, verbose_name='Процент отписок/минуты')),
                ('channel_reaction', models.IntegerField(default=20, verbose_name='% реакций от количества просмотров')),
                ('ad_reaction', models.IntegerField(default=20, verbose_name='% от общего числа реакций для рекламных постов')),
                ('comment', models.IntegerField(default=0, verbose_name='Количество комментариев под рекламными постами')),
            ],
        ),
        migrations.CreateModel(
            name='CommentParam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_comment', models.IntegerField(default=0, verbose_name='Минимальное количество комментариев')),
                ('max_comment', models.IntegerField(default=5, verbose_name='Максимальное количество комментариев')),
                ('ladder', models.CharField(max_length=512, verbose_name='Лесенка для комментариев')),
                ('auto_moderation', models.IntegerField(default=10, verbose_name='Автоматическая модерация комментариев')),
            ],
        ),
        migrations.CreateModel(
            name='Ladder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_percent', models.BooleanField(default=True, verbose_name='Тип лесенки')),
                ('param', models.CharField(default='20/5; 10/20; 70/60', max_length=512, verbose_name='Параметры лесенки')),
                ('spread', models.CharField(blank=True, max_length=16, null=True, verbose_name='Разброс')),
            ],
        ),
        migrations.CreateModel(
            name='Reaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reactions', models.CharField(max_length=128, verbose_name='Реакции')),
                ('type_count', models.IntegerField(default=1, verbose_name='Количество типов')),
                ('min_reaction', models.IntegerField(default=10, verbose_name='Минимальное количество реакций')),
                ('max_reaction', models.IntegerField(default=10, verbose_name='Максимальное количество реакций')),
            ],
        ),
        migrations.CreateModel(
            name='Sessions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='VotingParam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='HistoryParam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('view_count', models.IntegerField(verbose_name='Количество просмотров')),
                ('reaction_count', models.IntegerField()),
                ('reaction_ladder', models.OneToOneField(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='history_reaction_ladder', to='app.ladder', verbose_name='Лесенка реакций')),
                ('view_ladder', models.OneToOneField(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='history_view_ladder', to='app.ladder', verbose_name='Лесенка просмотров')),
            ],
        ),
        migrations.CreateModel(
            name='ReactionParam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_post_reaction', models.IntegerField(default=2, verbose_name='На сколько старых постов будут ставиться реакции')),
                ('ai_reactions', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ai_reactions', to='app.reaction', verbose_name='Реакции от ИИ')),
                ('basic_reactions', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='basic_reactions', to='app.reaction', verbose_name='Основные реакции')),
                ('start_ladder', models.OneToOneField(default=1, on_delete=django.db.models.deletion.CASCADE, to='app.ladder', verbose_name='Лесенка к старту')),
                ('text_reactions', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='text_reactions', to='app.reaction', verbose_name='Реакции из текста')),
                ('user_reactions', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_reactions', to='app.reaction', verbose_name='Реакции от пользователей')),
            ],
        ),
        migrations.CreateModel(
            name='SubscribeParam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('male', models.IntegerField(default=50, verbose_name='Процент мужчин')),
                ('female', models.IntegerField(default=50, verbose_name='Процент женщин')),
                ('unsubscribes', models.CharField(default='100/44640', max_length=512, verbose_name='Параметры отписки')),
                ('start_ladder', models.OneToOneField(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='subscribe_start_ladder', to='app.ladder', verbose_name='Лесенка к старту')),
                ('time_ladder', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subscribe_time_ladder', to='app.ladder', verbose_name='Лесенка ко времени')),
            ],
        ),
        migrations.CreateModel(
            name='ViewParam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('holliday', models.IntegerField(default=50, verbose_name='Охват в выходные дни')),
                ('last_post', models.CharField(default='1/20; 2/10; 3/5', max_length=512, verbose_name='На предыдущие посты')),
                ('old_post', models.IntegerField(default=2, verbose_name='Сколько смотреть старых постов при подписке')),
                ('start_ladder', models.OneToOneField(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='view_start_ladder', to='app.ladder', verbose_name='Лесенка к старту')),
                ('time_ladder', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='view_time_ladder', to='app.ladder', verbose_name='Лесенка ко времени')),
            ],
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Название шаблона')),
                ('ad', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='template_ad', to='app.adparam', verbose_name='tasks_for_ad')),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='template_comment', to='app.commentparam', verbose_name='tasks_for_comment')),
                ('history', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='template_history', to='app.historyparam', verbose_name='tasks_for_ad')),
                ('reaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='template_reaction', to='app.reactionparam', verbose_name='tasks_for_reaction')),
                ('subscribe', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='template_subscribe', to='app.subscribeparam', verbose_name='tasks_for_subscribe')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='templates', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь, создавший задачу')),
                ('view', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='template_view', to='app.viewparam', verbose_name='tasks_for_view')),
                ('voting', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='template_voting', to='app.votingparam', verbose_name='tasks_for_voting')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel_link', models.CharField(max_length=128, verbose_name='Ссылка на канал')),
                ('start_time', models.DateTimeField(default=datetime.datetime(2025, 5, 11, 23, 14, 20, 710205, tzinfo=datetime.timezone.utc))),
                ('is_active', models.BooleanField(default=False, verbose_name='Активна ли')),
                ('action', models.ManyToManyField(blank=True, null=True, to='app.subscribeparam', verbose_name='tasks_for_ad')),
                ('ad', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='task_ad', to='app.adparam', verbose_name='tasks_for_ad')),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='task_comment', to='app.commentparam', verbose_name='tasks_for_comment')),
                ('history', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='task_history', to='app.historyparam', verbose_name='tasks_for_ad')),
                ('reaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='task_reaction', to='app.reactionparam', verbose_name='tasks_for_reaction')),
                ('sessions', models.ManyToManyField(to='app.sessions', verbose_name='Сессии')),
                ('subscribe', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='task_subscribe', to='app.subscribeparam', verbose_name='tasks_for_subscribe')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь, создавший задачу')),
                ('view', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='task_view', to='app.viewparam', verbose_name='tasks_for_view')),
                ('voting', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='task_voting', to='app.votingparam', verbose_name='tasks_for_voting')),
            ],
        ),
    ]
